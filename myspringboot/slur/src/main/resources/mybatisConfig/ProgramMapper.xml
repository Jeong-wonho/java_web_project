<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.slur.dto.ProgramMapper">
 	<!--  2가지 , 왼쪽에 나오는 것과, 프로그램 회차 클릭할 때 리뷰목록 뜨게 만들기! -->
 <resultMap id="reivewResultMap2" type="review" autoMapping="true">
 	<id column="review_program_time" property="review_program_time"/>
	<result column="review_num" property="review_num"/> 	
	<result column="review_title" property="review_title"/>
	<result column="review_date" property="review_date"/>
 	
 </resultMap>
 
 <resultMap id="reviewResultMap" type="review" autoMapping="true">
 	<result column="review_user_id" property="review_user_id.user_id"/>
 </resultMap>
 	<select id="selectByTimes" resultType="program">
 	select program_time from program order by program_times desc
 	</select>
 	
 	<select id="selectByReviews" parameterType="string" resultMap="reivewResultMap2">
 	select r.review_num, r.review_date, r.review_program_times, r.review_title, review_user_id "review_user_id.user_id"
 	from program_tb p INNER JOIN review_tb r on p.program_time = r.review_program_times where p.program_time=#{program_time}
 	</select>
	
	<select id="getListWithTimes" parameterType="string" resultMap="reivewResultMap2">
	 <![CDATA[select *  from
		(
		select r.*, review_user_id "review_user_id.user_id" from program_tb p INNER JOIN
 	 	review_tb r on p.program_time = r.review_program_times 
		where review_num > 0 and rownum >0 and rownum <= (#{pageNum} * #{amount}) p.program_time=#{program_time} 
		order by review_program_times desc
		)
	where rn > (#{pageNum}-1) * #{amount}
	]]>
 	</select>
 	
 	<insert id="insertReview" parameterType="review">
 	INSERT INTO REVIEW_TB(review_num, review_title, review_date, review_user_id, review_program_times, review_content)
 	VALUES((SELECT NVL(MAX(review_num),0)+1 FROM review_tb), #{review_title}, SYSDATE	,
 	 #{review_user_id.user_id}, #{review_program_times}, #{review_content})
 	</insert>
 	
 	<select id = "selectAll" resultType="review">
 		SELECT review_tb.*, review_user_id "review_user_id.user_id" FROM review_tb ORDER BY REVIEW_PROGRAM_TIMES desc
 	</select>
 	
 	<select id="selectByWord" resultType="review">
 	select review_tb.*, review_user_id "review_user_id.user_id" from review_tb where review_title like '%${word}%' ORDER BY REVIEW_PROGRAM_TIMES desc
 	</select>
 	
 	<select id="selectByInfo" parameterType= "int" resultMap="reviewResultMap">
 	SELECT * FROM review_tb WHERE review_num=#{review_num}
 	</select>
 	
 	<select id="getListWithPaging" resultType="review">
	 <![CDATA[select *  from
		(
		select rownum rn, review_num, review_title, review_user_id "review_user_id.user_id", review_date, review_program_times
		from review_tb
		where review_num > 0 and rownum >0 and rownum <= (#{pageNum} * #{amount}) order by review_program_times desc
		)
	where rn > (#{pageNum}-1) * #{amount}
	]]>
 	</select>
 	
 	<select id="getListWordPaging" resultType="review">
 	<![CDATA[select *  from
		(
		select rownum rn, review_num, review_title, review_user_id "review_user_id.user_id", review_date, review_program_times
		from review_tb
		where review_num > 0 and rownum >0 and rownum <= (#{pageNum} * #{amount}) and where review_title like '%${word}%' 
		order by review_program_times desc
		)
	where rn > (#{pageNum}-1) * #{amount}
	]]>
 	</select>
 	
 	<update id ="updateReview" parameterType="review">
 	UPDATE review_tb SET review_title=#{review_title}, review_program_times=#{review_program_times}, review_content=#{review_content} WHERE review_num= #{review_num}
 	</update>
 	
 	<delete id="deleteReview" parameterType="review">
 	DELETE FROM review_tb WHERE review_num=#{review_num} AND review_user_id = #{review_user_id.user_id}
 	</delete>
 	
 </mapper>