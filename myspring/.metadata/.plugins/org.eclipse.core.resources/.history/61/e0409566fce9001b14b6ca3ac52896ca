package com.day.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.day.dto.Customer;
import com.day.dto.OrderInfo;
import com.day.dto.OrderLine;
import com.day.dto.Product;
import com.day.exception.AddException;
import com.day.exception.FindException;
import com.day.sql.MyConnection;

@Repository("orderDAO")
public class OrderDAOOracle implements OrderDAO {

	@Autowired
	private SqlSessionFactory sessionFactory;

	@Override
	public void insert(OrderInfo info) throws AddException {
		Connection con = null;
		try {
			con = MyConnection.getConnection();
			con.setAutoCommit(false); // 자동커밋 해제
		} catch (SQLException e) {
			e.printStackTrace();
			throw new AddException(e.getMessage());
		}
		try {
			insertInfo(info);
			insertLines(info.getLines());
			con.commit(); // 커밋
		} catch (Exception e) {
			try {
				con.rollback(); // 롤백
			} catch (SQLException e1) {
			}
			throw new AddException(e.getMessage());
		} finally {
			MyConnection.close(con, null, null);
		}
	}

	/**
	 * 주문기본정보 추가한다
	 * 
	 * @param con  DB연결객체
	 * @param info 주문기본정보
	 * @throws AddException
	 */
	private void insertInfo(OrderInfo info) throws AddException {
		// DB연결
		SqlSession session = null;
		try {
			session = sessionFactory.openSession();
			session.insert("com.day.dto.OrderMapper.insertinfo", info);
			session.commit();
		} catch (Exception e) {
			e.printStackTrace();
			throw new AddException(e.getMessage());
		} finally {
			if (session != null) {
				session.close();
			}
		}
	}

	/**
	 * 주문 상세 정보들 추가한다
	 * 
	 * @param con   DB연결객체
	 * @param lines 주문상세정보들
	 * @throws AddException
	 */
	private void insertLines(List<OrderLine> lines) throws AddException {
		SqlSession session = null;
		try {
			session = sessionFactory.openSession();
			for (OrderLine line : lines) {
				session.insert("com.day.dto.OrderMapper.insertLine", line);
				session.commit();
			}
			
		} catch (Exception e) {
			e.printStackTrace();
			throw new AddException("주문상세 추가실패:" + e.getMessage());
		} finally {
			if (session != null) {
				session.close();
			}
		}
	}

	@Override
	public List<OrderInfo> selectById(String id) throws FindException {
		SqlSession session = null;
		try {
			session = sessionFactory.openSession();
			List<OrderInfo> list = session.selectList("com.day.dto.OrderMapper.selectById", id);
			session.commit();
			return list;
			if (list.size() == 0) {
				throw new FindException("주문내역이 없습니다");
			}
			return list;
		} catch (SQLException e) {
			e.printStackTrace();
			throw new FindException(e.getMessage());
		} finally {
			MyConnection.close(con, pstmt, rs);
		}
	}

	public static void main(String[] args) {
		OrderDAOOracle dao = new OrderDAOOracle();

//		OrderInfo info = new OrderInfo();
//		Customer c = new Customer();  c.setId("id1");
//		info.setOrder_c(c);
//		
//		List<OrderLine> lines = new ArrayList<>();	
//		for(int i=1; i<=3; i++) {
//			OrderLine line = new OrderLine();
//			Product p = new Product();  p.setProd_no("C000" + i);
//			line.setOrder_p(p);
//			line.setOrder_quantity(i*1000);
//			lines.add(line);
//		}
//		info.setLines(lines);
//		
//		try {
//			dao.insert(info);
//		} catch (AddException e) {
//			e.printStackTrace();
//		}

		String order_id = "id1";
		try {
			List<OrderInfo> list = dao.selectById(order_id);
			System.out.println(list);
			System.out.println("총 주문횟수: " + list.size()); // 2

		} catch (FindException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
}
