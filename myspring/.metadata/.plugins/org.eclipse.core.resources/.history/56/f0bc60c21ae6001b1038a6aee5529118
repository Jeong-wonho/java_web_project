import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.List;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

import com.day.dto.Customer;
import com.day.dto.Product;

public class Test {

   public static void main(String[] args) {
      String resource = "mybatis-config.xml";
      InputStream inputStream;
      try {
         inputStream = Resources.getResourceAsStream(resource);
         SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);
         SqlSession session = sqlSessionFactory.openSession();
         
         //---------------------------------
         Product p =session.selectOne("com.day.dto.ProductMapper.selectByNo", "C0001");
         System.out.println(p);
         System.out.println("-----------------------------1");         
         //---------------------------------
         
         List<Product> list = session.selectList("com.day.dto.ProductMapper.selectAll");
         //System.out.println(list);
         for(Product p1: list) {
            System.out.println(p1);
         }
         System.out.println("-----------------------------2");         
         //---------------------------------
         
         HashMap<String , Integer> map = new HashMap<>();
         map.put("currentPage", 2);    // 보여줄 페이지는 2페이지
         map.put("cnt_per_page", 4); // 페이지별 보여줄 목록 수 4건
         List<Product> listCurrentPage = session.selectList("com.day.dto.ProductMapper.selectAllPage", map);
         //System.out.println(listCurrentPage);
         for(Product p1: listCurrentPage) {
            System.out.println(p1);
         }
         System.out.println("-----------------------------3");
         //---------------------------------
         
         //List<Product> selectByName = session.selectList("com.day.dto.ProductMapper.selectByName", "%아%");
         //List<Product> selectByName = session.selectList("com.day.dto.ProductMapper.selectByName", "아");
         HashMap<String, String> map1 = new HashMap<>();
         map1.put("word", "리");
         map1.put("ordermethod", "prod_name DESC");
         List<Product> selectByName = session.selectList("com.day.dto.ProductMapper.selectByName", map1);
         for(Product p1: selectByName) {
            System.out.println(p1);
         }
         System.out.println("-----------------------------4");
         //---------------------------------
         
         System.out.println("고객추가");
         HashMap<String, Object> mapCustomer = new HashMap<>();
//         mapCustomer.put("id", "id11");
//         mapCustomer.put("pwd", "pwd11");
//         mapCustomer.put("name", "이름11");
//         mapCustomer.put("buildingno", "1");
//         session.insert("com.day.dto.CustomerMapper.insert", mapCustomer);
         
//         Customer c = new Customer();
//         c.setId("id12");
//         c.setPwd("p111");
//         c.setName("이름12");
//         c.setBuildingno("1");
//         session.insert("com.day.dto.CustomerMapper.insert", c);
//         session.commit();
         System.out.println("-----------------------------5");
         //---------------------------------
//         System.out.println("고객 정보 수정");
//         Customer c1 = new Customer();
//         c1.setId("id11");         
//         c1.setPwd("pupd11");
//         c1.setName("이름11");
//         c1.setBuildingno("주소11");
//         //c1.setEnabled(0); //탈퇴처리
//         session.update("com.day.dto.CustomerMapper.update", c1);
//         session.commit();
         System.out.println("고객 정보 삭제");
         String id="id11";
         int rowcnt = session.delete("com.day.dto.CustomerMapper.delete", "id");
         if(rowcnt==1) {
            System.err.println(id+"가 삭제됨");
         } else if (rowcnt < 1) {
            System.err.println(id+"정보가 없습니다.");
         }
         session.commit();
         
      } catch (IOException e) {
         e.printStackTrace();
      }
      
   }

}